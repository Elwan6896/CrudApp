@model IPagedList<CrudApp.Models.Info>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Info List";
}
@{
    var index = (Model.PageNumber - 1) * Model.PageSize + 1;
}
<h1>Info List</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search by name or email..."
            value="@Context.Request.Query["searchString"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped text-center">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Birth Date</th>
                <th>Country</th>
                <th>Subscribed</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@index</td>
                    <td>@item.Name</td>
                    <td>@item.Email</td>
                    <td>@item.Phone</td>
                    <td>@(item.BirthDate.HasValue? item.BirthDate.Value.ToShortDateString() : "N/A")</td>
                    <td>@item.Country</td>
                    <td>@(item.IsSubscribed ? "Yes" : "No")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>


<a asp-action="Create" class="btn btn-success mb-3">Add New Info</a>

<div class="d-flex justify-content-center mt-4 mb-5">
    @Html.PagedListPager(
    Model,
    page => Url.Action("Index", new { page, searchString = ViewBag.CurrentFilter }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayLinkToIndividualPages = true,
            MaximumPageNumbersToDisplay = 5,
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        }
        )
</div>
